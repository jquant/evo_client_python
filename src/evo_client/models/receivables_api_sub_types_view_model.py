# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from enum import IntEnum
from typing import Optional

from pydantic import BaseModel


class PaymentType(IntEnum):
    """Payment types enumeration for EVO API.
    
    Maintains mapping between payment IDs and their types.
    """
    DEBIT_BALANCE = 0  # Saldo Devedor
    CASH = 1          # Dinheiro
    CREDIT_CARD = 2   # Cartão de Crédito
    DEBIT_CARD = 3    # Cartão de Débito
    CHECK = 4         # Cheque
    BANK_SLIP = 5     # Boleto Bancário
    PAGSEGURO = 6     # PagSeguro
    DEPOSIT = 7       # Depósito
    DIRECT_DEBIT = 8  # Débito em Conta
    INTERNET = 9      # Internet
    SALES_CREDIT = 11 # Créditos de Venda
    ONLINE_CREDIT = 12 # Cartão de Crédito Online
    TRANSFER = 13     # Transferência
    PIX = 18         # Pix


class AccountStatus(IntEnum):
    """Account status enumeration for EVO API.
    
    Represents the possible states of an account in the system.
    """
    OPENED = 1    # Account is open/pending
    RECEIVED = 2  # Account has been received/paid
    CANCELED = 3  # Account has been canceled
    OVERDUE = 4   # Account is past due date


class ReceivablesApiSubTypesViewModel(BaseModel):
    """Payment types model for EVO API."""
    id: Optional[int] = None
    name: Optional[str] = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        return self.model_dump(by_alias=True, exclude_none=True)

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ReceivablesApiSubTypesViewModel):
            return False

        return self.model_dump() == other.model_dump()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
