# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from datetime import datetime
from enum import IntEnum
from typing import Optional

from pydantic import BaseModel, Field

from .cliente_enotas_retorno import ClienteEnotasRetorno
from .metadados_enotas_retorno import MetadadosEnotasRetorno
from .servico_enotas_retorno import ServicoEnotasRetorno


class InvoiceStatus(IntEnum):
    """Invoice status enumeration."""

    ISSUED = 1
    WITH_ERROR = 2
    CANCELED = 3


class InvoiceType(IntEnum):
    """Invoice type enumeration."""

    NFSE = 1  # Service Invoice
    NFE = 2  # Electronic Invoice
    NFCE = 3  # Consumer Electronic Invoice


class EnotasRetorno(BaseModel):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    id: Optional[str] = Field(default=None)
    tipo: Optional[str] = Field(default=None)
    id_externo: Optional[str] = Field(default=None, alias="idExterno")
    status: Optional[str] = Field(default=None)
    motivo_status: Optional[str] = Field(default=None, alias="motivoStatus")
    ambiente_emissao: Optional[str] = Field(default=None, alias="ambienteEmissao")
    enviada_por_email: Optional[bool] = Field(default=None, alias="enviadaPorEmail")
    data_criacao: Optional[datetime] = Field(default=None, alias="dataCriacao")
    data_ultima_alteracao: Optional[datetime] = Field(
        default=None, alias="dataUltimaAlteracao"
    )
    cliente: Optional[ClienteEnotasRetorno] = Field(default=None)
    numero: Optional[str] = Field(default=None)
    codigo_verificacao: Optional[str] = Field(default=None, alias="codigoVerificacao")
    chave_acesso: Optional[str] = Field(default=None, alias="chaveAcesso")
    data_autorizacao: Optional[datetime] = Field(default=None, alias="dataAutorizacao")
    link_download_pdf: Optional[str] = Field(default=None, alias="linkDownloadPDF")
    link_download_xml: Optional[str] = Field(default=None, alias="linkDownloadXML")
    numero_rps: Optional[int] = Field(default=None, alias="numeroRps")
    serie_rps: Optional[str] = Field(default=None, alias="serieRps")
    data_competencia_rps: Optional[datetime] = Field(
        default=None, alias="dataCompetenciaRps"
    )
    servico: Optional[ServicoEnotasRetorno] = Field(default=None)
    natureza_operacao: Optional[str] = Field(default=None, alias="naturezaOperacao")
    valor_cofins: Optional[float] = Field(default=None, alias="valorCofins")
    valor_csll: Optional[float] = Field(default=None, alias="valorCsll")
    valor_inss: Optional[float] = Field(default=None, alias="valorInss")
    valor_ir: Optional[float] = Field(default=None, alias="valorIr")
    valor_pis: Optional[float] = Field(default=None, alias="valorPis")
    deducoes: Optional[float] = Field(default=None)
    descontos: Optional[float] = Field(default=None)
    outras_retencoes: Optional[float] = Field(default=None, alias="outrasRetencoes")
    valor_total: Optional[float] = Field(default=None, alias="valorTotal")
    valor_iss: Optional[float] = Field(default=None, alias="valorIss")
    observacoes: Optional[str] = Field(default=None)
    metadados: Optional[MetadadosEnotasRetorno] = Field(default=None)
    tipo_nf: Optional[str] = Field(default=None, alias="tipoNf")
    id_filial: Optional[int] = Field(default=None, alias="idFilial")

    def to_dict(self):
        """Returns the model properties as a dict"""
        return self.model_dump(by_alias=True)

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EnotasRetorno):
            return False

        return self.model_dump() == other.model_dump()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
