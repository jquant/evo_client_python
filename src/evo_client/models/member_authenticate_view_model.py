# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from typing import Optional
from pydantic import BaseModel, Field


class MemberAuthenticateViewModel(BaseModel):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    id_member: Optional[int] = Field(default=None, alias="idMember")
    id_branch: Optional[int] = Field(default=None, alias="idBranch")
    id_enterprise: Optional[int] = Field(default=None, alias="idEnterprise")
    name: Optional[str] = None
    dns: Optional[str] = None
    success_authenticate: Optional[bool] = Field(
        default=None, alias="successAuthenticate"
    )
    url_reset_password: Optional[str] = Field(default=None, alias="urlResetPassword")
    url_member_area: Optional[str] = Field(default=None, alias="urlMemberArea")

    def to_dict(self):
        """Returns the model properties as a dict"""
        return self.model_dump(by_alias=True, exclude_none=True)

    def to_str(self):
        """Returns the string representation of the model"""
        return str(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MemberAuthenticateViewModel):
            return False

        return self.model_dump() == other.model_dump()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
