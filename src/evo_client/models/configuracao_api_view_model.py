from typing import Optional
from pydantic import BaseModel, Field
from typing import Optional
import pprint

from datetime import datetime
from typing import List, Optional

from .business_hours_view_model import BusinessHoursViewModel


class ConfiguracaoApiViewModel(BaseModel):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    id_branch: Optional[int] = Field(default=None, alias="idBranch")
    name: Optional[str] = None
    internal_name: Optional[str] = Field(default=None, alias="internalName")
    cnpj: Optional[str] = None
    address: Optional[str] = None
    neighborhood: Optional[str] = None
    telephone: Optional[str] = None
    number: Optional[str] = None
    id_state: Optional[int] = Field(default=None, alias="idState")
    state: Optional[str] = None
    state_short: Optional[str] = Field(default=None, alias="stateShort")
    city: Optional[str] = None
    complement: Optional[str] = None
    zip_code: Optional[str] = Field(default=None, alias="zipCode")
    website: Optional[str] = None
    latitude: Optional[float] = None
    longitude: Optional[float] = None
    opening_date: Optional[datetime] = Field(default=None, alias="openingDate")
    business_hours: Optional[List[BusinessHoursViewModel]] = Field(
        default=None, alias="businessHours"
    )
    search_terms: Optional[List[str]] = Field(default=None, alias="searchTerms")

    def to_dict(self):
        """Returns the model properties as a dict"""
        return self.model_dump(by_alias=True)

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ConfiguracaoApiViewModel):
            return False
        return self.model_dump() == other.model_dump()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
