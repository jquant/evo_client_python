# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel, Field

from .basic_member_membership_api_view_model import BasicMemberMembershipApiViewModel
from .member_membership_api_view_model import MemberMembershipApiViewModel
from .member_responsible_view_model import MemberResponsibleViewModel
from .tax_data_view_model import TaxDataViewModel
from .telefone_api_view_model import TelefoneApiViewModel


class ClienteDetalhesBasicosApiViewModel(BaseModel):
    """Client Basic Details API View Model.

    This model represents basic client details in the EVO API system.
    Auto-generated from OpenAPI/Swagger specification.
    """

    id_member: Optional[int] = Field(default=None, alias="idMember")
    photo: Optional[str] = None
    first_name: Optional[str] = Field(default=None, alias="firstName")
    last_name: Optional[str] = Field(default=None, alias="lastName")
    register_date: Optional[datetime] = Field(default=None, alias="registerDate")
    id_branch: Optional[int] = Field(default=None, alias="idBranch")
    branch_name: Optional[str] = Field(default=None, alias="branchName")
    access_blocked: Optional[bool] = Field(default=None, alias="accessBlocked")
    blocked_reason: Optional[str] = Field(default=None, alias="blockedReason")
    document: Optional[str] = None
    document_id: Optional[str] = Field(default=None, alias="documentId")
    marital_status: Optional[str] = Field(default=None, alias="maritalStatus")
    gender: Optional[str] = None
    birth_date: Optional[datetime] = Field(default=None, alias="birthDate")
    country: Optional[str] = None
    address: Optional[str] = None
    state: Optional[str] = None
    city: Optional[str] = None
    passport: Optional[str] = None
    zip_code: Optional[str] = Field(default=None, alias="zipCode")
    complement: Optional[str] = None
    neighborhood: Optional[str] = None
    access_card_number: Optional[str] = Field(default=None, alias="accessCardNumber")
    number: Optional[str] = None
    id_member_migration: Optional[str] = Field(default=None, alias="idMemberMigration")
    tax_data: Optional[TaxDataViewModel] = Field(default=None, alias="taxData")
    email: Optional[str] = None
    slug: Optional[str] = None
    penalized: Optional[bool] = None
    id_branch_token: Optional[str] = Field(default=None, alias="idBranchToken")
    membership_status: Optional[str] = Field(default=None, alias="membershipStatus")
    contacts: Optional[List[TelefoneApiViewModel]] = None
    last_access_date: Optional[datetime] = Field(default=None, alias="lastAccessDate")
    responsibles: Optional[List[MemberResponsibleViewModel]] = None
    memberships: Optional[List[MemberMembershipApiViewModel]] = None
    registration_kind: Optional[str] = Field(default=None, alias="registrationKind")
    membership: Optional[BasicMemberMembershipApiViewModel] = None

    def to_dict(self) -> dict:
        """Returns the model properties as a dictionary"""
        return self.model_dump(by_alias=True)

    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, ClienteDetalhesBasicosApiViewModel):
            return False
        return self.model_dump() == other.model_dump()

    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
