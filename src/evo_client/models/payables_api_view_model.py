# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from datetime import datetime
from typing import Optional
from pydantic import BaseModel, Field


from .payables_api_sub_types_view_model import PayablesApiSubTypesViewModel


class PayablesApiViewModel(BaseModel):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    id_payable: Optional[int] = Field(default=None, alias="idPayable")
    description: Optional[str] = None
    recipient: Optional[str] = None
    cost_center: Optional[PayablesApiSubTypesViewModel] = Field(
        default=None, alias="costCenter"
    )
    input_date: Optional[datetime] = Field(default=None, alias="inputDate")
    due_date: Optional[datetime] = Field(default=None, alias="dueDate")
    payment_date: Optional[datetime] = Field(default=None, alias="paymentDate")
    competence_date: Optional[datetime] = Field(default=None, alias="competenceDate")
    cancellation_date: Optional[datetime] = Field(
        default=None, alias="cancellationDate"
    )
    ammount: Optional[float] = None
    ammount_paid: Optional[float] = Field(default=None, alias="ammountPaid")
    status: Optional["PayablesApiSubTypesViewModel"] = None
    destination: Optional[PayablesApiSubTypesViewModel] = None
    bank_account: Optional[PayablesApiSubTypesViewModel] = Field(
        default=None, alias="bankAccount"
    )
    beneficiary: Optional[str] = None
    categories: Optional[str] = None
    observation: Optional[str] = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        return self.model_dump(by_alias=True, exclude_none=True, mode="json")

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PayablesApiViewModel):
            return False

        return self.model_dump() == other.model_dump()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
