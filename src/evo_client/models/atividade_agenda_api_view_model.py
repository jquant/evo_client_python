# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501
"""
import pprint

from enum import IntEnum
from datetime import datetime
from typing import List, Optional
from pydantic import BaseModel, Field


from .periodizacao_api_view_model import PeriodizacaoApiViewModel
from .e_status_atividade import EStatusAtividade


from enum import Enum
from pydantic import BaseModel

from .publico_atividade_view_model import PublicoAtividadeViewModel
from .atividade_lugar_reserva_api_view_model import AtividadeLugarReservaApiViewModel


class AtividadeAgendaApiViewModel(BaseModel):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    id_configuration: Optional[int] = Field(None, alias="idConfiguration")
    id_activity: Optional[int] = Field(None, alias="idActivity")
    id_group_activity: Optional[int] = Field(None, alias="idGroupActivity")
    name: Optional[str] = None
    description: Optional[str] = None
    image_url: Optional[str] = Field(None, alias="imageUrl")
    area: Optional[str] = None
    id_area: Optional[int] = Field(None, alias="idArea")
    capacity: Optional[int] = None
    ocupation: Optional[int] = None
    allow_choosing_spot: Optional[bool] = Field(None, alias="allowChoosingSpot")
    start_time: Optional[str] = Field(None, alias="startTime")
    end_time: Optional[str] = Field(None, alias="endTime")
    booking_start_time: Optional[str] = Field(None, alias="bookingStartTime")
    booking_end_time: Optional[str] = Field(None, alias="bookingEndTime")
    instructor: Optional[str] = None
    instructor_photo: Optional[str] = Field(None, alias="instructorPhoto")
    activity_date: Optional[datetime] = Field(None, alias="activityDate")
    audience: Optional[str] = None
    id_audience: Optional[int] = Field(None, alias="idAudience")
    code: Optional[str] = None
    confirmed: Optional[bool] = None
    start_hour_tick: Optional[int] = Field(None, alias="startHourTick")
    end_hour_tick: Optional[int] = Field(None, alias="endHourTick")
    spots: Optional[List[AtividadeLugarReservaApiViewModel]] = None
    periodization: Optional[List[PeriodizacaoApiViewModel]] = None
    status: Optional[EStatusAtividade] = None
    status_name: Optional[str] = Field(None, alias="statusName")

    class Config:
        allow_population_by_field_name = True
