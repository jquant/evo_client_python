# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from typing import Optional

from pydantic import BaseModel, Field


class CardDataViewModel(BaseModel):
    """Card data view model.

    This model represents card data information in the EVO API system.
    Auto-generated from OpenAPI/Swagger specification.
    """

    token: Optional[str] = None
    temporary_token: Optional[str] = Field(default=None, alias="temporaryToken")
    branch_token: Optional[str] = Field(default=None, alias="branchToken")
    total_installments: Optional[int] = Field(default=None, alias="totalInstallments")
    truncated_card_number: Optional[str] = Field(
        default=None, alias="truncatedCardNumber"
    )
    brand: Optional[str] = None
    card_holder_name: Optional[str] = Field(default=None, alias="cardHolderName")
    card_expiration_year: Optional[int] = Field(
        default=None, alias="cardExpirationYear"
    )
    card_expiration_month: Optional[int] = Field(
        default=None, alias="cardExpirationMonth"
    )

    def to_dict(self) -> dict:
        """Returns the model properties as a dictionary"""
        return self.model_dump(by_alias=True)

    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, CardDataViewModel):
            return False
        return self.model_dump() == other.model_dump()

    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
