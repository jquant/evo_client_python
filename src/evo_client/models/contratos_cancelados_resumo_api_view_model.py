# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from datetime import datetime
from typing import List, Optional
from pydantic import BaseModel, Field

from .contratos_cancelados_parcelas_api_view_model import (
    ContratosCanceladosParcelasApiViewModel,
)
from .dados_contrato_trasnferencia_api_view_model import (
    DadosContratoTrasnferenciaApiViewModel,
)
from .dados_troca_contrato_api_view_model import DadosTrocaContratoApiViewModel


class ContratosCanceladosResumoApiViewModel(BaseModel):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    id_member: Optional[int] = Field(default=None, alias="idMember")
    name: Optional[str] = None
    id_membership: Optional[int] = Field(default=None, alias="idMembership")
    id_member_member_ship: Optional[int] = Field(
        default=None, alias="idMemberMemberShip"
    )
    id_branch: Optional[int] = Field(default=None, alias="idBranch")
    num_members: Optional[int] = Field(default=None, alias="numMembers")
    id_sale: Optional[int] = Field(default=None, alias="idSale")
    sale_value: Optional[float] = Field(default=None, alias="saleValue")
    name_membership: Optional[str] = Field(default=None, alias="nameMembership")
    membership_start: Optional[datetime] = Field(default=None, alias="membershipStart")
    membership_end: Optional[datetime] = Field(default=None, alias="membershipEnd")
    register_cancel_date: Optional[datetime] = Field(
        default=None, alias="registerCancelDate"
    )
    cancel_date: Optional[datetime] = Field(default=None, alias="cancelDate")
    reason_cancellation: Optional[str] = Field(default=None, alias="reasonCancellation")
    sale_date: Optional[datetime] = Field(default=None, alias="saleDate")
    cancellation_fine: Optional[float] = Field(default=None, alias="cancellationFine")
    remaining_value: Optional[float] = Field(default=None, alias="remainingValue")
    receivables: Optional[List[ContratosCanceladosParcelasApiViewModel]] = None
    min_period_stay_membership: Optional[int] = Field(
        default=None, alias="minPeriodStayMembership"
    )
    membership_trasnfer_data: Optional[DadosContratoTrasnferenciaApiViewModel] = Field(
        default=None, alias="membershipTrasnferData"
    )
    membership_swap_data: Optional[DadosTrocaContratoApiViewModel] = Field(
        default=None, alias="membershipSwapData"
    )
    id_member_migration: Optional[str] = Field(default=None, alias="idMemberMigration")
    id_sale_migration: Optional[str] = Field(default=None, alias="idSaleMigration")
    id_membership_category: Optional[int] = Field(
        default=None, alias="idMembershipCategory"
    )
    member_document: Optional[str] = Field(default=None, alias="memberDocument")

    def to_dict(self):
        """Returns the model properties as a dict"""
        return self.model_dump(by_alias=True)

    def to_str(self):
        """Returns the string representation of the model"""
        return str(self.model_dump())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ContratosCanceladosResumoApiViewModel):
            return False
        return self.model_dump() == other.model_dump()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
