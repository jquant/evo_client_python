# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from typing import Optional
import pprint
from pydantic import BaseModel, Field


class PublicoAtividadeViewModel(BaseModel):
    """Activity Audience View Model

    This model represents the audience configuration for activities in the EVO API system.
    Auto-generated from OpenAPI/Swagger specification.
    """

    id_publico_atividade: Optional[int] = Field(
        default=None, alias="idPublicoAtividade"
    )
    id_filial: Optional[int] = Field(default=None, alias="idFilial")
    nome: Optional[str] = None

    def to_dict(self) -> dict:
        """Returns the model properties as a dictionary"""
        result = self.model_dump(by_alias=True)
        # Handle nested models that might not be automatically converted
        for key, value in result.items():
            if isinstance(value, list):
                result[key] = [
                    (item.model_dump() if hasattr(item, "model_dump") else item)
                    for item in value
                ]
            elif hasattr(value, "model_dump"):
                result[key] = value.model_dump()
        return result

    def to_str(self) -> str:
        """Returns the string representation of the model using pprint"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def __repr__(self) -> str:
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other) -> bool:
        """Returns true if both objects are equal"""
        if not isinstance(other, PublicoAtividadeViewModel):
            return False
        return self.model_dump() == other.model_dump()

    def __ne__(self, other) -> bool:
        """Returns true if both objects are not equal"""
        return not self == other
