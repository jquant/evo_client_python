# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ProspectsResumoApiViewModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id_prospect': 'int',
        'id_branch': 'int',
        'branch_name': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'document': 'str',
        'cellphone': 'str',
        'email': 'str',
        'gympass_id': 'str',
        'register_date': 'datetime',
        'gender': 'str',
        'birth_date': 'datetime',
        'signup_type': 'str',
        'mkt_channel': 'str',
        'conversion_date': 'datetime',
        'id_member': 'int',
        'current_step': 'str',
        'address': 'str',
        'city': 'str',
        'complement': 'str',
        'neighborhood': 'str',
        'state': 'str',
        'country': 'str',
        'zip_code': 'str',
        'number': 'str',
        'responsible': 'ProspectResponsavelResumoApiViewModel'
    }

    attribute_map = {
        'id_prospect': 'idProspect',
        'id_branch': 'idBranch',
        'branch_name': 'branchName',
        'first_name': 'firstName',
        'last_name': 'lastName',
        'document': 'document',
        'cellphone': 'cellphone',
        'email': 'email',
        'gympass_id': 'gympassId',
        'register_date': 'registerDate',
        'gender': 'gender',
        'birth_date': 'birthDate',
        'signup_type': 'signupType',
        'mkt_channel': 'mktChannel',
        'conversion_date': 'conversionDate',
        'id_member': 'idMember',
        'current_step': 'currentStep',
        'address': 'address',
        'city': 'city',
        'complement': 'complement',
        'neighborhood': 'neighborhood',
        'state': 'state',
        'country': 'country',
        'zip_code': 'zipCode',
        'number': 'number',
        'responsible': 'responsible'
    }

    def __init__(self, id_prospect=None, id_branch=None, branch_name=None, first_name=None, last_name=None, document=None, cellphone=None, email=None, gympass_id=None, register_date=None, gender=None, birth_date=None, signup_type=None, mkt_channel=None, conversion_date=None, id_member=None, current_step=None, address=None, city=None, complement=None, neighborhood=None, state=None, country=None, zip_code=None, number=None, responsible=None):  # noqa: E501
        """ProspectsResumoApiViewModel - a model defined in Swagger"""  # noqa: E501
        self._id_prospect = None
        self._id_branch = None
        self._branch_name = None
        self._first_name = None
        self._last_name = None
        self._document = None
        self._cellphone = None
        self._email = None
        self._gympass_id = None
        self._register_date = None
        self._gender = None
        self._birth_date = None
        self._signup_type = None
        self._mkt_channel = None
        self._conversion_date = None
        self._id_member = None
        self._current_step = None
        self._address = None
        self._city = None
        self._complement = None
        self._neighborhood = None
        self._state = None
        self._country = None
        self._zip_code = None
        self._number = None
        self._responsible = None
        self.discriminator = None
        if id_prospect is not None:
            self.id_prospect = id_prospect
        if id_branch is not None:
            self.id_branch = id_branch
        if branch_name is not None:
            self.branch_name = branch_name
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if document is not None:
            self.document = document
        if cellphone is not None:
            self.cellphone = cellphone
        if email is not None:
            self.email = email
        if gympass_id is not None:
            self.gympass_id = gympass_id
        if register_date is not None:
            self.register_date = register_date
        if gender is not None:
            self.gender = gender
        if birth_date is not None:
            self.birth_date = birth_date
        if signup_type is not None:
            self.signup_type = signup_type
        if mkt_channel is not None:
            self.mkt_channel = mkt_channel
        if conversion_date is not None:
            self.conversion_date = conversion_date
        if id_member is not None:
            self.id_member = id_member
        if current_step is not None:
            self.current_step = current_step
        if address is not None:
            self.address = address
        if city is not None:
            self.city = city
        if complement is not None:
            self.complement = complement
        if neighborhood is not None:
            self.neighborhood = neighborhood
        if state is not None:
            self.state = state
        if country is not None:
            self.country = country
        if zip_code is not None:
            self.zip_code = zip_code
        if number is not None:
            self.number = number
        if responsible is not None:
            self.responsible = responsible

    @property
    def id_prospect(self):
        """Gets the id_prospect of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The id_prospect of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_prospect

    @id_prospect.setter
    def id_prospect(self, id_prospect):
        """Sets the id_prospect of this ProspectsResumoApiViewModel.


        :param id_prospect: The id_prospect of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_prospect = id_prospect

    @property
    def id_branch(self):
        """Gets the id_branch of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The id_branch of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_branch

    @id_branch.setter
    def id_branch(self, id_branch):
        """Sets the id_branch of this ProspectsResumoApiViewModel.


        :param id_branch: The id_branch of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_branch = id_branch

    @property
    def branch_name(self):
        """Gets the branch_name of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The branch_name of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._branch_name

    @branch_name.setter
    def branch_name(self, branch_name):
        """Sets the branch_name of this ProspectsResumoApiViewModel.


        :param branch_name: The branch_name of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._branch_name = branch_name

    @property
    def first_name(self):
        """Gets the first_name of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The first_name of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ProspectsResumoApiViewModel.


        :param first_name: The first_name of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The last_name of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ProspectsResumoApiViewModel.


        :param last_name: The last_name of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def document(self):
        """Gets the document of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The document of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._document

    @document.setter
    def document(self, document):
        """Sets the document of this ProspectsResumoApiViewModel.


        :param document: The document of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._document = document

    @property
    def cellphone(self):
        """Gets the cellphone of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The cellphone of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._cellphone

    @cellphone.setter
    def cellphone(self, cellphone):
        """Sets the cellphone of this ProspectsResumoApiViewModel.


        :param cellphone: The cellphone of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._cellphone = cellphone

    @property
    def email(self):
        """Gets the email of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The email of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ProspectsResumoApiViewModel.


        :param email: The email of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def gympass_id(self):
        """Gets the gympass_id of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The gympass_id of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._gympass_id

    @gympass_id.setter
    def gympass_id(self, gympass_id):
        """Sets the gympass_id of this ProspectsResumoApiViewModel.


        :param gympass_id: The gympass_id of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._gympass_id = gympass_id

    @property
    def register_date(self):
        """Gets the register_date of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The register_date of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._register_date

    @register_date.setter
    def register_date(self, register_date):
        """Sets the register_date of this ProspectsResumoApiViewModel.


        :param register_date: The register_date of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._register_date = register_date

    @property
    def gender(self):
        """Gets the gender of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The gender of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this ProspectsResumoApiViewModel.


        :param gender: The gender of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._gender = gender

    @property
    def birth_date(self):
        """Gets the birth_date of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The birth_date of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._birth_date

    @birth_date.setter
    def birth_date(self, birth_date):
        """Sets the birth_date of this ProspectsResumoApiViewModel.


        :param birth_date: The birth_date of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._birth_date = birth_date

    @property
    def signup_type(self):
        """Gets the signup_type of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The signup_type of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._signup_type

    @signup_type.setter
    def signup_type(self, signup_type):
        """Sets the signup_type of this ProspectsResumoApiViewModel.


        :param signup_type: The signup_type of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._signup_type = signup_type

    @property
    def mkt_channel(self):
        """Gets the mkt_channel of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The mkt_channel of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._mkt_channel

    @mkt_channel.setter
    def mkt_channel(self, mkt_channel):
        """Sets the mkt_channel of this ProspectsResumoApiViewModel.


        :param mkt_channel: The mkt_channel of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._mkt_channel = mkt_channel

    @property
    def conversion_date(self):
        """Gets the conversion_date of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The conversion_date of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._conversion_date

    @conversion_date.setter
    def conversion_date(self, conversion_date):
        """Sets the conversion_date of this ProspectsResumoApiViewModel.


        :param conversion_date: The conversion_date of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._conversion_date = conversion_date

    @property
    def id_member(self):
        """Gets the id_member of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The id_member of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_member

    @id_member.setter
    def id_member(self, id_member):
        """Sets the id_member of this ProspectsResumoApiViewModel.


        :param id_member: The id_member of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_member = id_member

    @property
    def current_step(self):
        """Gets the current_step of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The current_step of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._current_step

    @current_step.setter
    def current_step(self, current_step):
        """Sets the current_step of this ProspectsResumoApiViewModel.


        :param current_step: The current_step of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._current_step = current_step

    @property
    def address(self):
        """Gets the address of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The address of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ProspectsResumoApiViewModel.


        :param address: The address of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._address = address

    @property
    def city(self):
        """Gets the city of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The city of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this ProspectsResumoApiViewModel.


        :param city: The city of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def complement(self):
        """Gets the complement of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The complement of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._complement

    @complement.setter
    def complement(self, complement):
        """Sets the complement of this ProspectsResumoApiViewModel.


        :param complement: The complement of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._complement = complement

    @property
    def neighborhood(self):
        """Gets the neighborhood of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The neighborhood of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._neighborhood

    @neighborhood.setter
    def neighborhood(self, neighborhood):
        """Sets the neighborhood of this ProspectsResumoApiViewModel.


        :param neighborhood: The neighborhood of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._neighborhood = neighborhood

    @property
    def state(self):
        """Gets the state of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The state of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ProspectsResumoApiViewModel.


        :param state: The state of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def country(self):
        """Gets the country of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The country of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this ProspectsResumoApiViewModel.


        :param country: The country of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._country = country

    @property
    def zip_code(self):
        """Gets the zip_code of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The zip_code of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this ProspectsResumoApiViewModel.


        :param zip_code: The zip_code of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._zip_code = zip_code

    @property
    def number(self):
        """Gets the number of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The number of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this ProspectsResumoApiViewModel.


        :param number: The number of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._number = number

    @property
    def responsible(self):
        """Gets the responsible of this ProspectsResumoApiViewModel.  # noqa: E501


        :return: The responsible of this ProspectsResumoApiViewModel.  # noqa: E501
        :rtype: ProspectResponsavelResumoApiViewModel
        """
        return self._responsible

    @responsible.setter
    def responsible(self, responsible):
        """Sets the responsible of this ProspectsResumoApiViewModel.


        :param responsible: The responsible of this ProspectsResumoApiViewModel.  # noqa: E501
        :type: ProspectResponsavelResumoApiViewModel
        """

        self._responsible = responsible

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ProspectsResumoApiViewModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProspectsResumoApiViewModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
