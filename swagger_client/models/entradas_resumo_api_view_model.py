# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EntradasResumoApiViewModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        '_date': 'datetime',
        'date_turn': 'datetime',
        'time_zone': 'str',
        'id_member': 'int',
        'name_member': 'str',
        'id_prospect': 'int',
        'name_prospect': 'str',
        'id_employee': 'int',
        'name_employee': 'str',
        'entry_type': 'str',
        'device': 'str',
        'releases_by_id': 'int',
        'id_branch': 'int',
        'block_reason': 'str',
        'entry_action': 'str',
        'id_migration': 'str'
    }

    attribute_map = {
        '_date': 'date',
        'date_turn': 'dateTurn',
        'time_zone': 'timeZone',
        'id_member': 'idMember',
        'name_member': 'nameMember',
        'id_prospect': 'idProspect',
        'name_prospect': 'nameProspect',
        'id_employee': 'idEmployee',
        'name_employee': 'nameEmployee',
        'entry_type': 'entryType',
        'device': 'device',
        'releases_by_id': 'releasesByID',
        'id_branch': 'idBranch',
        'block_reason': 'blockReason',
        'entry_action': 'entryAction',
        'id_migration': 'idMigration'
    }

    def __init__(self, _date=None, date_turn=None, time_zone=None, id_member=None, name_member=None, id_prospect=None, name_prospect=None, id_employee=None, name_employee=None, entry_type=None, device=None, releases_by_id=None, id_branch=None, block_reason=None, entry_action=None, id_migration=None):  # noqa: E501
        """EntradasResumoApiViewModel - a model defined in Swagger"""  # noqa: E501
        self.__date = None
        self._date_turn = None
        self._time_zone = None
        self._id_member = None
        self._name_member = None
        self._id_prospect = None
        self._name_prospect = None
        self._id_employee = None
        self._name_employee = None
        self._entry_type = None
        self._device = None
        self._releases_by_id = None
        self._id_branch = None
        self._block_reason = None
        self._entry_action = None
        self._id_migration = None
        self.discriminator = None
        if _date is not None:
            self._date = _date
        if date_turn is not None:
            self.date_turn = date_turn
        if time_zone is not None:
            self.time_zone = time_zone
        if id_member is not None:
            self.id_member = id_member
        if name_member is not None:
            self.name_member = name_member
        if id_prospect is not None:
            self.id_prospect = id_prospect
        if name_prospect is not None:
            self.name_prospect = name_prospect
        if id_employee is not None:
            self.id_employee = id_employee
        if name_employee is not None:
            self.name_employee = name_employee
        if entry_type is not None:
            self.entry_type = entry_type
        if device is not None:
            self.device = device
        if releases_by_id is not None:
            self.releases_by_id = releases_by_id
        if id_branch is not None:
            self.id_branch = id_branch
        if block_reason is not None:
            self.block_reason = block_reason
        if entry_action is not None:
            self.entry_action = entry_action
        if id_migration is not None:
            self.id_migration = id_migration

    @property
    def _date(self):
        """Gets the _date of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The _date of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this EntradasResumoApiViewModel.


        :param _date: The _date of this EntradasResumoApiViewModel.  # noqa: E501
        :type: datetime
        """

        self.__date = _date

    @property
    def date_turn(self):
        """Gets the date_turn of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The date_turn of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._date_turn

    @date_turn.setter
    def date_turn(self, date_turn):
        """Sets the date_turn of this EntradasResumoApiViewModel.


        :param date_turn: The date_turn of this EntradasResumoApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._date_turn = date_turn

    @property
    def time_zone(self):
        """Gets the time_zone of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The time_zone of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this EntradasResumoApiViewModel.


        :param time_zone: The time_zone of this EntradasResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._time_zone = time_zone

    @property
    def id_member(self):
        """Gets the id_member of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The id_member of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_member

    @id_member.setter
    def id_member(self, id_member):
        """Sets the id_member of this EntradasResumoApiViewModel.


        :param id_member: The id_member of this EntradasResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_member = id_member

    @property
    def name_member(self):
        """Gets the name_member of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The name_member of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._name_member

    @name_member.setter
    def name_member(self, name_member):
        """Sets the name_member of this EntradasResumoApiViewModel.


        :param name_member: The name_member of this EntradasResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._name_member = name_member

    @property
    def id_prospect(self):
        """Gets the id_prospect of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The id_prospect of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_prospect

    @id_prospect.setter
    def id_prospect(self, id_prospect):
        """Sets the id_prospect of this EntradasResumoApiViewModel.


        :param id_prospect: The id_prospect of this EntradasResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_prospect = id_prospect

    @property
    def name_prospect(self):
        """Gets the name_prospect of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The name_prospect of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._name_prospect

    @name_prospect.setter
    def name_prospect(self, name_prospect):
        """Sets the name_prospect of this EntradasResumoApiViewModel.


        :param name_prospect: The name_prospect of this EntradasResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._name_prospect = name_prospect

    @property
    def id_employee(self):
        """Gets the id_employee of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The id_employee of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_employee

    @id_employee.setter
    def id_employee(self, id_employee):
        """Sets the id_employee of this EntradasResumoApiViewModel.


        :param id_employee: The id_employee of this EntradasResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_employee = id_employee

    @property
    def name_employee(self):
        """Gets the name_employee of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The name_employee of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._name_employee

    @name_employee.setter
    def name_employee(self, name_employee):
        """Sets the name_employee of this EntradasResumoApiViewModel.


        :param name_employee: The name_employee of this EntradasResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._name_employee = name_employee

    @property
    def entry_type(self):
        """Gets the entry_type of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The entry_type of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._entry_type

    @entry_type.setter
    def entry_type(self, entry_type):
        """Sets the entry_type of this EntradasResumoApiViewModel.


        :param entry_type: The entry_type of this EntradasResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._entry_type = entry_type

    @property
    def device(self):
        """Gets the device of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The device of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._device

    @device.setter
    def device(self, device):
        """Sets the device of this EntradasResumoApiViewModel.


        :param device: The device of this EntradasResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._device = device

    @property
    def releases_by_id(self):
        """Gets the releases_by_id of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The releases_by_id of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._releases_by_id

    @releases_by_id.setter
    def releases_by_id(self, releases_by_id):
        """Sets the releases_by_id of this EntradasResumoApiViewModel.


        :param releases_by_id: The releases_by_id of this EntradasResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._releases_by_id = releases_by_id

    @property
    def id_branch(self):
        """Gets the id_branch of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The id_branch of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_branch

    @id_branch.setter
    def id_branch(self, id_branch):
        """Sets the id_branch of this EntradasResumoApiViewModel.


        :param id_branch: The id_branch of this EntradasResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_branch = id_branch

    @property
    def block_reason(self):
        """Gets the block_reason of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The block_reason of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._block_reason

    @block_reason.setter
    def block_reason(self, block_reason):
        """Sets the block_reason of this EntradasResumoApiViewModel.


        :param block_reason: The block_reason of this EntradasResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._block_reason = block_reason

    @property
    def entry_action(self):
        """Gets the entry_action of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The entry_action of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._entry_action

    @entry_action.setter
    def entry_action(self, entry_action):
        """Sets the entry_action of this EntradasResumoApiViewModel.


        :param entry_action: The entry_action of this EntradasResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._entry_action = entry_action

    @property
    def id_migration(self):
        """Gets the id_migration of this EntradasResumoApiViewModel.  # noqa: E501


        :return: The id_migration of this EntradasResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._id_migration

    @id_migration.setter
    def id_migration(self, id_migration):
        """Sets the id_migration of this EntradasResumoApiViewModel.


        :param id_migration: The id_migration of this EntradasResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._id_migration = id_migration

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EntradasResumoApiViewModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EntradasResumoApiViewModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
