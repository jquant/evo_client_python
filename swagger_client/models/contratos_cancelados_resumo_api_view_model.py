# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ContratosCanceladosResumoApiViewModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id_member': 'int',
        'name': 'str',
        'id_membership': 'int',
        'id_member_member_ship': 'int',
        'id_branch': 'int',
        'num_members': 'int',
        'id_sale': 'int',
        'sale_value': 'float',
        'name_membership': 'str',
        'membership_start': 'datetime',
        'membership_end': 'datetime',
        'register_cancel_date': 'datetime',
        'cancel_date': 'datetime',
        'reason_cancellation': 'str',
        'sale_date': 'datetime',
        'cancellation_fine': 'float',
        'remaining_value': 'float',
        'receivables': 'list[ContratosCanceladosParcelasApiViewModel]',
        'min_period_stay_membership': 'int',
        'membership_trasnfer_data': 'DadosContratoTrasnferenciaApiViewModel',
        'membership_swap_data': 'DadosTrocaContratoApiViewModel',
        'id_member_migration': 'str',
        'id_sale_migration': 'str',
        'id_membership_category': 'int',
        'member_document': 'str'
    }

    attribute_map = {
        'id_member': 'idMember',
        'name': 'name',
        'id_membership': 'idMembership',
        'id_member_member_ship': 'idMemberMemberShip',
        'id_branch': 'idBranch',
        'num_members': 'numMembers',
        'id_sale': 'idSale',
        'sale_value': 'saleValue',
        'name_membership': 'nameMembership',
        'membership_start': 'membershipStart',
        'membership_end': 'membershipEnd',
        'register_cancel_date': 'registerCancelDate',
        'cancel_date': 'cancelDate',
        'reason_cancellation': 'reasonCancellation',
        'sale_date': 'saleDate',
        'cancellation_fine': 'cancellationFine',
        'remaining_value': 'remainingValue',
        'receivables': 'receivables',
        'min_period_stay_membership': 'minPeriodStayMembership',
        'membership_trasnfer_data': 'membershipTrasnferData',
        'membership_swap_data': 'membershipSwapData',
        'id_member_migration': 'idMemberMigration',
        'id_sale_migration': 'idSaleMigration',
        'id_membership_category': 'idMembershipCategory',
        'member_document': 'memberDocument'
    }

    def __init__(self, id_member=None, name=None, id_membership=None, id_member_member_ship=None, id_branch=None, num_members=None, id_sale=None, sale_value=None, name_membership=None, membership_start=None, membership_end=None, register_cancel_date=None, cancel_date=None, reason_cancellation=None, sale_date=None, cancellation_fine=None, remaining_value=None, receivables=None, min_period_stay_membership=None, membership_trasnfer_data=None, membership_swap_data=None, id_member_migration=None, id_sale_migration=None, id_membership_category=None, member_document=None):  # noqa: E501
        """ContratosCanceladosResumoApiViewModel - a model defined in Swagger"""  # noqa: E501
        self._id_member = None
        self._name = None
        self._id_membership = None
        self._id_member_member_ship = None
        self._id_branch = None
        self._num_members = None
        self._id_sale = None
        self._sale_value = None
        self._name_membership = None
        self._membership_start = None
        self._membership_end = None
        self._register_cancel_date = None
        self._cancel_date = None
        self._reason_cancellation = None
        self._sale_date = None
        self._cancellation_fine = None
        self._remaining_value = None
        self._receivables = None
        self._min_period_stay_membership = None
        self._membership_trasnfer_data = None
        self._membership_swap_data = None
        self._id_member_migration = None
        self._id_sale_migration = None
        self._id_membership_category = None
        self._member_document = None
        self.discriminator = None
        if id_member is not None:
            self.id_member = id_member
        if name is not None:
            self.name = name
        if id_membership is not None:
            self.id_membership = id_membership
        if id_member_member_ship is not None:
            self.id_member_member_ship = id_member_member_ship
        if id_branch is not None:
            self.id_branch = id_branch
        if num_members is not None:
            self.num_members = num_members
        if id_sale is not None:
            self.id_sale = id_sale
        if sale_value is not None:
            self.sale_value = sale_value
        if name_membership is not None:
            self.name_membership = name_membership
        if membership_start is not None:
            self.membership_start = membership_start
        if membership_end is not None:
            self.membership_end = membership_end
        if register_cancel_date is not None:
            self.register_cancel_date = register_cancel_date
        if cancel_date is not None:
            self.cancel_date = cancel_date
        if reason_cancellation is not None:
            self.reason_cancellation = reason_cancellation
        if sale_date is not None:
            self.sale_date = sale_date
        if cancellation_fine is not None:
            self.cancellation_fine = cancellation_fine
        if remaining_value is not None:
            self.remaining_value = remaining_value
        if receivables is not None:
            self.receivables = receivables
        if min_period_stay_membership is not None:
            self.min_period_stay_membership = min_period_stay_membership
        if membership_trasnfer_data is not None:
            self.membership_trasnfer_data = membership_trasnfer_data
        if membership_swap_data is not None:
            self.membership_swap_data = membership_swap_data
        if id_member_migration is not None:
            self.id_member_migration = id_member_migration
        if id_sale_migration is not None:
            self.id_sale_migration = id_sale_migration
        if id_membership_category is not None:
            self.id_membership_category = id_membership_category
        if member_document is not None:
            self.member_document = member_document

    @property
    def id_member(self):
        """Gets the id_member of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The id_member of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_member

    @id_member.setter
    def id_member(self, id_member):
        """Sets the id_member of this ContratosCanceladosResumoApiViewModel.


        :param id_member: The id_member of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_member = id_member

    @property
    def name(self):
        """Gets the name of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The name of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContratosCanceladosResumoApiViewModel.


        :param name: The name of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def id_membership(self):
        """Gets the id_membership of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The id_membership of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_membership

    @id_membership.setter
    def id_membership(self, id_membership):
        """Sets the id_membership of this ContratosCanceladosResumoApiViewModel.


        :param id_membership: The id_membership of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_membership = id_membership

    @property
    def id_member_member_ship(self):
        """Gets the id_member_member_ship of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The id_member_member_ship of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_member_member_ship

    @id_member_member_ship.setter
    def id_member_member_ship(self, id_member_member_ship):
        """Sets the id_member_member_ship of this ContratosCanceladosResumoApiViewModel.


        :param id_member_member_ship: The id_member_member_ship of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_member_member_ship = id_member_member_ship

    @property
    def id_branch(self):
        """Gets the id_branch of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The id_branch of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_branch

    @id_branch.setter
    def id_branch(self, id_branch):
        """Sets the id_branch of this ContratosCanceladosResumoApiViewModel.


        :param id_branch: The id_branch of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_branch = id_branch

    @property
    def num_members(self):
        """Gets the num_members of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The num_members of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._num_members

    @num_members.setter
    def num_members(self, num_members):
        """Sets the num_members of this ContratosCanceladosResumoApiViewModel.


        :param num_members: The num_members of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._num_members = num_members

    @property
    def id_sale(self):
        """Gets the id_sale of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The id_sale of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_sale

    @id_sale.setter
    def id_sale(self, id_sale):
        """Sets the id_sale of this ContratosCanceladosResumoApiViewModel.


        :param id_sale: The id_sale of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_sale = id_sale

    @property
    def sale_value(self):
        """Gets the sale_value of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The sale_value of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: float
        """
        return self._sale_value

    @sale_value.setter
    def sale_value(self, sale_value):
        """Sets the sale_value of this ContratosCanceladosResumoApiViewModel.


        :param sale_value: The sale_value of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: float
        """

        self._sale_value = sale_value

    @property
    def name_membership(self):
        """Gets the name_membership of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The name_membership of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._name_membership

    @name_membership.setter
    def name_membership(self, name_membership):
        """Sets the name_membership of this ContratosCanceladosResumoApiViewModel.


        :param name_membership: The name_membership of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._name_membership = name_membership

    @property
    def membership_start(self):
        """Gets the membership_start of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The membership_start of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._membership_start

    @membership_start.setter
    def membership_start(self, membership_start):
        """Sets the membership_start of this ContratosCanceladosResumoApiViewModel.


        :param membership_start: The membership_start of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._membership_start = membership_start

    @property
    def membership_end(self):
        """Gets the membership_end of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The membership_end of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._membership_end

    @membership_end.setter
    def membership_end(self, membership_end):
        """Sets the membership_end of this ContratosCanceladosResumoApiViewModel.


        :param membership_end: The membership_end of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._membership_end = membership_end

    @property
    def register_cancel_date(self):
        """Gets the register_cancel_date of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The register_cancel_date of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._register_cancel_date

    @register_cancel_date.setter
    def register_cancel_date(self, register_cancel_date):
        """Sets the register_cancel_date of this ContratosCanceladosResumoApiViewModel.


        :param register_cancel_date: The register_cancel_date of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._register_cancel_date = register_cancel_date

    @property
    def cancel_date(self):
        """Gets the cancel_date of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The cancel_date of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._cancel_date

    @cancel_date.setter
    def cancel_date(self, cancel_date):
        """Sets the cancel_date of this ContratosCanceladosResumoApiViewModel.


        :param cancel_date: The cancel_date of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._cancel_date = cancel_date

    @property
    def reason_cancellation(self):
        """Gets the reason_cancellation of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The reason_cancellation of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._reason_cancellation

    @reason_cancellation.setter
    def reason_cancellation(self, reason_cancellation):
        """Sets the reason_cancellation of this ContratosCanceladosResumoApiViewModel.


        :param reason_cancellation: The reason_cancellation of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._reason_cancellation = reason_cancellation

    @property
    def sale_date(self):
        """Gets the sale_date of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The sale_date of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._sale_date

    @sale_date.setter
    def sale_date(self, sale_date):
        """Sets the sale_date of this ContratosCanceladosResumoApiViewModel.


        :param sale_date: The sale_date of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._sale_date = sale_date

    @property
    def cancellation_fine(self):
        """Gets the cancellation_fine of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The cancellation_fine of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: float
        """
        return self._cancellation_fine

    @cancellation_fine.setter
    def cancellation_fine(self, cancellation_fine):
        """Sets the cancellation_fine of this ContratosCanceladosResumoApiViewModel.


        :param cancellation_fine: The cancellation_fine of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: float
        """

        self._cancellation_fine = cancellation_fine

    @property
    def remaining_value(self):
        """Gets the remaining_value of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The remaining_value of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: float
        """
        return self._remaining_value

    @remaining_value.setter
    def remaining_value(self, remaining_value):
        """Sets the remaining_value of this ContratosCanceladosResumoApiViewModel.


        :param remaining_value: The remaining_value of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: float
        """

        self._remaining_value = remaining_value

    @property
    def receivables(self):
        """Gets the receivables of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The receivables of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: list[ContratosCanceladosParcelasApiViewModel]
        """
        return self._receivables

    @receivables.setter
    def receivables(self, receivables):
        """Sets the receivables of this ContratosCanceladosResumoApiViewModel.


        :param receivables: The receivables of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: list[ContratosCanceladosParcelasApiViewModel]
        """

        self._receivables = receivables

    @property
    def min_period_stay_membership(self):
        """Gets the min_period_stay_membership of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The min_period_stay_membership of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._min_period_stay_membership

    @min_period_stay_membership.setter
    def min_period_stay_membership(self, min_period_stay_membership):
        """Sets the min_period_stay_membership of this ContratosCanceladosResumoApiViewModel.


        :param min_period_stay_membership: The min_period_stay_membership of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._min_period_stay_membership = min_period_stay_membership

    @property
    def membership_trasnfer_data(self):
        """Gets the membership_trasnfer_data of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The membership_trasnfer_data of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: DadosContratoTrasnferenciaApiViewModel
        """
        return self._membership_trasnfer_data

    @membership_trasnfer_data.setter
    def membership_trasnfer_data(self, membership_trasnfer_data):
        """Sets the membership_trasnfer_data of this ContratosCanceladosResumoApiViewModel.


        :param membership_trasnfer_data: The membership_trasnfer_data of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: DadosContratoTrasnferenciaApiViewModel
        """

        self._membership_trasnfer_data = membership_trasnfer_data

    @property
    def membership_swap_data(self):
        """Gets the membership_swap_data of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The membership_swap_data of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: DadosTrocaContratoApiViewModel
        """
        return self._membership_swap_data

    @membership_swap_data.setter
    def membership_swap_data(self, membership_swap_data):
        """Sets the membership_swap_data of this ContratosCanceladosResumoApiViewModel.


        :param membership_swap_data: The membership_swap_data of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: DadosTrocaContratoApiViewModel
        """

        self._membership_swap_data = membership_swap_data

    @property
    def id_member_migration(self):
        """Gets the id_member_migration of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The id_member_migration of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._id_member_migration

    @id_member_migration.setter
    def id_member_migration(self, id_member_migration):
        """Sets the id_member_migration of this ContratosCanceladosResumoApiViewModel.


        :param id_member_migration: The id_member_migration of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._id_member_migration = id_member_migration

    @property
    def id_sale_migration(self):
        """Gets the id_sale_migration of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The id_sale_migration of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._id_sale_migration

    @id_sale_migration.setter
    def id_sale_migration(self, id_sale_migration):
        """Sets the id_sale_migration of this ContratosCanceladosResumoApiViewModel.


        :param id_sale_migration: The id_sale_migration of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._id_sale_migration = id_sale_migration

    @property
    def id_membership_category(self):
        """Gets the id_membership_category of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The id_membership_category of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_membership_category

    @id_membership_category.setter
    def id_membership_category(self, id_membership_category):
        """Sets the id_membership_category of this ContratosCanceladosResumoApiViewModel.


        :param id_membership_category: The id_membership_category of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: int
        """

        self._id_membership_category = id_membership_category

    @property
    def member_document(self):
        """Gets the member_document of this ContratosCanceladosResumoApiViewModel.  # noqa: E501


        :return: The member_document of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._member_document

    @member_document.setter
    def member_document(self, member_document):
        """Sets the member_document of this ContratosCanceladosResumoApiViewModel.


        :param member_document: The member_document of this ContratosCanceladosResumoApiViewModel.  # noqa: E501
        :type: str
        """

        self._member_document = member_document

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ContratosCanceladosResumoApiViewModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ContratosCanceladosResumoApiViewModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
