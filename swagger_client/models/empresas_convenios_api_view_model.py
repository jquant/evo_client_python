# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class EmpresasConveniosApiViewModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'agreement_company_id': 'int',
        'branch_id': 'int',
        'corporate_name': 'str',
        'trade_name': 'str',
        'cnpj': 'str',
        'postal_code': 'str',
        'street_address': 'str',
        'number': 'str',
        'complement': 'str',
        'neighborhood': 'str',
        'city': 'str',
        'state': 'str',
        'business_email': 'str',
        'financial_email': 'str',
        'responsible_name': 'str',
        'is_deleted_flag': 'bool',
        'deletion_date': 'datetime',
        'employee_deletion_id': 'int',
        'opening_date': 'datetime',
        'size': 'str',
        'economic_activity_description': 'str',
        'legal_nature_description': 'str',
        'phone': 'str',
        'registration_status': 'int',
        'category': 'int',
        'fpas_contributor': 'bool',
        'remarks': 'str'
    }

    attribute_map = {
        'agreement_company_id': 'agreementCompanyId',
        'branch_id': 'branchId',
        'corporate_name': 'corporateName',
        'trade_name': 'tradeName',
        'cnpj': 'cnpj',
        'postal_code': 'postalCode',
        'street_address': 'streetAddress',
        'number': 'number',
        'complement': 'complement',
        'neighborhood': 'neighborhood',
        'city': 'city',
        'state': 'state',
        'business_email': 'businessEmail',
        'financial_email': 'financialEmail',
        'responsible_name': 'responsibleName',
        'is_deleted_flag': 'isDeletedFlag',
        'deletion_date': 'deletionDate',
        'employee_deletion_id': 'employeeDeletionId',
        'opening_date': 'openingDate',
        'size': 'size',
        'economic_activity_description': 'economicActivityDescription',
        'legal_nature_description': 'legalNatureDescription',
        'phone': 'phone',
        'registration_status': 'registrationStatus',
        'category': 'category',
        'fpas_contributor': 'fpasContributor',
        'remarks': 'remarks'
    }

    def __init__(self, agreement_company_id=None, branch_id=None, corporate_name=None, trade_name=None, cnpj=None, postal_code=None, street_address=None, number=None, complement=None, neighborhood=None, city=None, state=None, business_email=None, financial_email=None, responsible_name=None, is_deleted_flag=None, deletion_date=None, employee_deletion_id=None, opening_date=None, size=None, economic_activity_description=None, legal_nature_description=None, phone=None, registration_status=None, category=None, fpas_contributor=None, remarks=None):  # noqa: E501
        """EmpresasConveniosApiViewModel - a model defined in Swagger"""  # noqa: E501
        self._agreement_company_id = None
        self._branch_id = None
        self._corporate_name = None
        self._trade_name = None
        self._cnpj = None
        self._postal_code = None
        self._street_address = None
        self._number = None
        self._complement = None
        self._neighborhood = None
        self._city = None
        self._state = None
        self._business_email = None
        self._financial_email = None
        self._responsible_name = None
        self._is_deleted_flag = None
        self._deletion_date = None
        self._employee_deletion_id = None
        self._opening_date = None
        self._size = None
        self._economic_activity_description = None
        self._legal_nature_description = None
        self._phone = None
        self._registration_status = None
        self._category = None
        self._fpas_contributor = None
        self._remarks = None
        self.discriminator = None
        if agreement_company_id is not None:
            self.agreement_company_id = agreement_company_id
        if branch_id is not None:
            self.branch_id = branch_id
        if corporate_name is not None:
            self.corporate_name = corporate_name
        if trade_name is not None:
            self.trade_name = trade_name
        if cnpj is not None:
            self.cnpj = cnpj
        if postal_code is not None:
            self.postal_code = postal_code
        if street_address is not None:
            self.street_address = street_address
        if number is not None:
            self.number = number
        if complement is not None:
            self.complement = complement
        if neighborhood is not None:
            self.neighborhood = neighborhood
        if city is not None:
            self.city = city
        if state is not None:
            self.state = state
        if business_email is not None:
            self.business_email = business_email
        if financial_email is not None:
            self.financial_email = financial_email
        if responsible_name is not None:
            self.responsible_name = responsible_name
        if is_deleted_flag is not None:
            self.is_deleted_flag = is_deleted_flag
        if deletion_date is not None:
            self.deletion_date = deletion_date
        if employee_deletion_id is not None:
            self.employee_deletion_id = employee_deletion_id
        if opening_date is not None:
            self.opening_date = opening_date
        if size is not None:
            self.size = size
        if economic_activity_description is not None:
            self.economic_activity_description = economic_activity_description
        if legal_nature_description is not None:
            self.legal_nature_description = legal_nature_description
        if phone is not None:
            self.phone = phone
        if registration_status is not None:
            self.registration_status = registration_status
        if category is not None:
            self.category = category
        if fpas_contributor is not None:
            self.fpas_contributor = fpas_contributor
        if remarks is not None:
            self.remarks = remarks

    @property
    def agreement_company_id(self):
        """Gets the agreement_company_id of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The agreement_company_id of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._agreement_company_id

    @agreement_company_id.setter
    def agreement_company_id(self, agreement_company_id):
        """Sets the agreement_company_id of this EmpresasConveniosApiViewModel.


        :param agreement_company_id: The agreement_company_id of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: int
        """

        self._agreement_company_id = agreement_company_id

    @property
    def branch_id(self):
        """Gets the branch_id of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The branch_id of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._branch_id

    @branch_id.setter
    def branch_id(self, branch_id):
        """Sets the branch_id of this EmpresasConveniosApiViewModel.


        :param branch_id: The branch_id of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: int
        """

        self._branch_id = branch_id

    @property
    def corporate_name(self):
        """Gets the corporate_name of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The corporate_name of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._corporate_name

    @corporate_name.setter
    def corporate_name(self, corporate_name):
        """Sets the corporate_name of this EmpresasConveniosApiViewModel.


        :param corporate_name: The corporate_name of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._corporate_name = corporate_name

    @property
    def trade_name(self):
        """Gets the trade_name of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The trade_name of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._trade_name

    @trade_name.setter
    def trade_name(self, trade_name):
        """Sets the trade_name of this EmpresasConveniosApiViewModel.


        :param trade_name: The trade_name of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._trade_name = trade_name

    @property
    def cnpj(self):
        """Gets the cnpj of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The cnpj of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._cnpj

    @cnpj.setter
    def cnpj(self, cnpj):
        """Sets the cnpj of this EmpresasConveniosApiViewModel.


        :param cnpj: The cnpj of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._cnpj = cnpj

    @property
    def postal_code(self):
        """Gets the postal_code of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The postal_code of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this EmpresasConveniosApiViewModel.


        :param postal_code: The postal_code of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._postal_code = postal_code

    @property
    def street_address(self):
        """Gets the street_address of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The street_address of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._street_address

    @street_address.setter
    def street_address(self, street_address):
        """Sets the street_address of this EmpresasConveniosApiViewModel.


        :param street_address: The street_address of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._street_address = street_address

    @property
    def number(self):
        """Gets the number of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The number of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this EmpresasConveniosApiViewModel.


        :param number: The number of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._number = number

    @property
    def complement(self):
        """Gets the complement of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The complement of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._complement

    @complement.setter
    def complement(self, complement):
        """Sets the complement of this EmpresasConveniosApiViewModel.


        :param complement: The complement of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._complement = complement

    @property
    def neighborhood(self):
        """Gets the neighborhood of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The neighborhood of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._neighborhood

    @neighborhood.setter
    def neighborhood(self, neighborhood):
        """Sets the neighborhood of this EmpresasConveniosApiViewModel.


        :param neighborhood: The neighborhood of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._neighborhood = neighborhood

    @property
    def city(self):
        """Gets the city of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The city of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this EmpresasConveniosApiViewModel.


        :param city: The city of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def state(self):
        """Gets the state of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The state of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this EmpresasConveniosApiViewModel.


        :param state: The state of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def business_email(self):
        """Gets the business_email of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The business_email of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._business_email

    @business_email.setter
    def business_email(self, business_email):
        """Sets the business_email of this EmpresasConveniosApiViewModel.


        :param business_email: The business_email of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._business_email = business_email

    @property
    def financial_email(self):
        """Gets the financial_email of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The financial_email of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._financial_email

    @financial_email.setter
    def financial_email(self, financial_email):
        """Sets the financial_email of this EmpresasConveniosApiViewModel.


        :param financial_email: The financial_email of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._financial_email = financial_email

    @property
    def responsible_name(self):
        """Gets the responsible_name of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The responsible_name of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._responsible_name

    @responsible_name.setter
    def responsible_name(self, responsible_name):
        """Sets the responsible_name of this EmpresasConveniosApiViewModel.


        :param responsible_name: The responsible_name of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._responsible_name = responsible_name

    @property
    def is_deleted_flag(self):
        """Gets the is_deleted_flag of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The is_deleted_flag of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_deleted_flag

    @is_deleted_flag.setter
    def is_deleted_flag(self, is_deleted_flag):
        """Sets the is_deleted_flag of this EmpresasConveniosApiViewModel.


        :param is_deleted_flag: The is_deleted_flag of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: bool
        """

        self._is_deleted_flag = is_deleted_flag

    @property
    def deletion_date(self):
        """Gets the deletion_date of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The deletion_date of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._deletion_date

    @deletion_date.setter
    def deletion_date(self, deletion_date):
        """Sets the deletion_date of this EmpresasConveniosApiViewModel.


        :param deletion_date: The deletion_date of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._deletion_date = deletion_date

    @property
    def employee_deletion_id(self):
        """Gets the employee_deletion_id of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The employee_deletion_id of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._employee_deletion_id

    @employee_deletion_id.setter
    def employee_deletion_id(self, employee_deletion_id):
        """Sets the employee_deletion_id of this EmpresasConveniosApiViewModel.


        :param employee_deletion_id: The employee_deletion_id of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: int
        """

        self._employee_deletion_id = employee_deletion_id

    @property
    def opening_date(self):
        """Gets the opening_date of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The opening_date of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._opening_date

    @opening_date.setter
    def opening_date(self, opening_date):
        """Sets the opening_date of this EmpresasConveniosApiViewModel.


        :param opening_date: The opening_date of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: datetime
        """

        self._opening_date = opening_date

    @property
    def size(self):
        """Gets the size of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The size of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this EmpresasConveniosApiViewModel.


        :param size: The size of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._size = size

    @property
    def economic_activity_description(self):
        """Gets the economic_activity_description of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The economic_activity_description of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._economic_activity_description

    @economic_activity_description.setter
    def economic_activity_description(self, economic_activity_description):
        """Sets the economic_activity_description of this EmpresasConveniosApiViewModel.


        :param economic_activity_description: The economic_activity_description of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._economic_activity_description = economic_activity_description

    @property
    def legal_nature_description(self):
        """Gets the legal_nature_description of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The legal_nature_description of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._legal_nature_description

    @legal_nature_description.setter
    def legal_nature_description(self, legal_nature_description):
        """Sets the legal_nature_description of this EmpresasConveniosApiViewModel.


        :param legal_nature_description: The legal_nature_description of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._legal_nature_description = legal_nature_description

    @property
    def phone(self):
        """Gets the phone of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The phone of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this EmpresasConveniosApiViewModel.


        :param phone: The phone of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def registration_status(self):
        """Gets the registration_status of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The registration_status of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._registration_status

    @registration_status.setter
    def registration_status(self, registration_status):
        """Sets the registration_status of this EmpresasConveniosApiViewModel.


        :param registration_status: The registration_status of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: int
        """

        self._registration_status = registration_status

    @property
    def category(self):
        """Gets the category of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The category of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: int
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this EmpresasConveniosApiViewModel.


        :param category: The category of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: int
        """

        self._category = category

    @property
    def fpas_contributor(self):
        """Gets the fpas_contributor of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The fpas_contributor of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: bool
        """
        return self._fpas_contributor

    @fpas_contributor.setter
    def fpas_contributor(self, fpas_contributor):
        """Sets the fpas_contributor of this EmpresasConveniosApiViewModel.


        :param fpas_contributor: The fpas_contributor of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: bool
        """

        self._fpas_contributor = fpas_contributor

    @property
    def remarks(self):
        """Gets the remarks of this EmpresasConveniosApiViewModel.  # noqa: E501


        :return: The remarks of this EmpresasConveniosApiViewModel.  # noqa: E501
        :rtype: str
        """
        return self._remarks

    @remarks.setter
    def remarks(self, remarks):
        """Sets the remarks of this EmpresasConveniosApiViewModel.


        :param remarks: The remarks of this EmpresasConveniosApiViewModel.  # noqa: E501
        :type: str
        """

        self._remarks = remarks

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EmpresasConveniosApiViewModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EmpresasConveniosApiViewModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
