# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ServicoEnotasRetorno(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'descricao': 'str',
        'aliquota_iss': 'float',
        'iss_retido_fonte': 'bool',
        'codigo_servico_municipio': 'str',
        'item_lista_servico_lc116': 'str',
        'cnae': 'str',
        'municipio_prestacao_servico': 'int'
    }

    attribute_map = {
        'descricao': 'descricao',
        'aliquota_iss': 'aliquotaIss',
        'iss_retido_fonte': 'issRetidoFonte',
        'codigo_servico_municipio': 'codigoServicoMunicipio',
        'item_lista_servico_lc116': 'itemListaServicoLC116',
        'cnae': 'cnae',
        'municipio_prestacao_servico': 'municipioPrestacaoServico'
    }

    def __init__(self, descricao=None, aliquota_iss=None, iss_retido_fonte=None, codigo_servico_municipio=None, item_lista_servico_lc116=None, cnae=None, municipio_prestacao_servico=None):  # noqa: E501
        """ServicoEnotasRetorno - a model defined in Swagger"""  # noqa: E501
        self._descricao = None
        self._aliquota_iss = None
        self._iss_retido_fonte = None
        self._codigo_servico_municipio = None
        self._item_lista_servico_lc116 = None
        self._cnae = None
        self._municipio_prestacao_servico = None
        self.discriminator = None
        if descricao is not None:
            self.descricao = descricao
        if aliquota_iss is not None:
            self.aliquota_iss = aliquota_iss
        if iss_retido_fonte is not None:
            self.iss_retido_fonte = iss_retido_fonte
        if codigo_servico_municipio is not None:
            self.codigo_servico_municipio = codigo_servico_municipio
        if item_lista_servico_lc116 is not None:
            self.item_lista_servico_lc116 = item_lista_servico_lc116
        if cnae is not None:
            self.cnae = cnae
        if municipio_prestacao_servico is not None:
            self.municipio_prestacao_servico = municipio_prestacao_servico

    @property
    def descricao(self):
        """Gets the descricao of this ServicoEnotasRetorno.  # noqa: E501


        :return: The descricao of this ServicoEnotasRetorno.  # noqa: E501
        :rtype: str
        """
        return self._descricao

    @descricao.setter
    def descricao(self, descricao):
        """Sets the descricao of this ServicoEnotasRetorno.


        :param descricao: The descricao of this ServicoEnotasRetorno.  # noqa: E501
        :type: str
        """

        self._descricao = descricao

    @property
    def aliquota_iss(self):
        """Gets the aliquota_iss of this ServicoEnotasRetorno.  # noqa: E501


        :return: The aliquota_iss of this ServicoEnotasRetorno.  # noqa: E501
        :rtype: float
        """
        return self._aliquota_iss

    @aliquota_iss.setter
    def aliquota_iss(self, aliquota_iss):
        """Sets the aliquota_iss of this ServicoEnotasRetorno.


        :param aliquota_iss: The aliquota_iss of this ServicoEnotasRetorno.  # noqa: E501
        :type: float
        """

        self._aliquota_iss = aliquota_iss

    @property
    def iss_retido_fonte(self):
        """Gets the iss_retido_fonte of this ServicoEnotasRetorno.  # noqa: E501


        :return: The iss_retido_fonte of this ServicoEnotasRetorno.  # noqa: E501
        :rtype: bool
        """
        return self._iss_retido_fonte

    @iss_retido_fonte.setter
    def iss_retido_fonte(self, iss_retido_fonte):
        """Sets the iss_retido_fonte of this ServicoEnotasRetorno.


        :param iss_retido_fonte: The iss_retido_fonte of this ServicoEnotasRetorno.  # noqa: E501
        :type: bool
        """

        self._iss_retido_fonte = iss_retido_fonte

    @property
    def codigo_servico_municipio(self):
        """Gets the codigo_servico_municipio of this ServicoEnotasRetorno.  # noqa: E501


        :return: The codigo_servico_municipio of this ServicoEnotasRetorno.  # noqa: E501
        :rtype: str
        """
        return self._codigo_servico_municipio

    @codigo_servico_municipio.setter
    def codigo_servico_municipio(self, codigo_servico_municipio):
        """Sets the codigo_servico_municipio of this ServicoEnotasRetorno.


        :param codigo_servico_municipio: The codigo_servico_municipio of this ServicoEnotasRetorno.  # noqa: E501
        :type: str
        """

        self._codigo_servico_municipio = codigo_servico_municipio

    @property
    def item_lista_servico_lc116(self):
        """Gets the item_lista_servico_lc116 of this ServicoEnotasRetorno.  # noqa: E501


        :return: The item_lista_servico_lc116 of this ServicoEnotasRetorno.  # noqa: E501
        :rtype: str
        """
        return self._item_lista_servico_lc116

    @item_lista_servico_lc116.setter
    def item_lista_servico_lc116(self, item_lista_servico_lc116):
        """Sets the item_lista_servico_lc116 of this ServicoEnotasRetorno.


        :param item_lista_servico_lc116: The item_lista_servico_lc116 of this ServicoEnotasRetorno.  # noqa: E501
        :type: str
        """

        self._item_lista_servico_lc116 = item_lista_servico_lc116

    @property
    def cnae(self):
        """Gets the cnae of this ServicoEnotasRetorno.  # noqa: E501


        :return: The cnae of this ServicoEnotasRetorno.  # noqa: E501
        :rtype: str
        """
        return self._cnae

    @cnae.setter
    def cnae(self, cnae):
        """Sets the cnae of this ServicoEnotasRetorno.


        :param cnae: The cnae of this ServicoEnotasRetorno.  # noqa: E501
        :type: str
        """

        self._cnae = cnae

    @property
    def municipio_prestacao_servico(self):
        """Gets the municipio_prestacao_servico of this ServicoEnotasRetorno.  # noqa: E501


        :return: The municipio_prestacao_servico of this ServicoEnotasRetorno.  # noqa: E501
        :rtype: int
        """
        return self._municipio_prestacao_servico

    @municipio_prestacao_servico.setter
    def municipio_prestacao_servico(self, municipio_prestacao_servico):
        """Sets the municipio_prestacao_servico of this ServicoEnotasRetorno.


        :param municipio_prestacao_servico: The municipio_prestacao_servico of this ServicoEnotasRetorno.  # noqa: E501
        :type: int
        """

        self._municipio_prestacao_servico = municipio_prestacao_servico

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ServicoEnotasRetorno, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ServicoEnotasRetorno):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
