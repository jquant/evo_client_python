# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ProspectApiIntegracaoAtualizacaoViewModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id_prospect': 'int',
        'name': 'str',
        'email': 'str',
        'last_name': 'str',
        'ddi': 'str',
        'cellphone': 'str',
        'birthday': 'datetime',
        'gender': 'str',
        'notes': 'str',
        'current_step': 'str',
        'cpf': 'str',
        'token_gympass': 'str'
    }

    attribute_map = {
        'id_prospect': 'idProspect',
        'name': 'name',
        'email': 'email',
        'last_name': 'lastName',
        'ddi': 'ddi',
        'cellphone': 'cellphone',
        'birthday': 'birthday',
        'gender': 'gender',
        'notes': 'notes',
        'current_step': 'currentStep',
        'cpf': 'cpf',
        'token_gympass': 'tokenGympass'
    }

    def __init__(self, id_prospect=None, name=None, email=None, last_name=None, ddi=None, cellphone=None, birthday=None, gender=None, notes=None, current_step=None, cpf=None, token_gympass=None):  # noqa: E501
        """ProspectApiIntegracaoAtualizacaoViewModel - a model defined in Swagger"""  # noqa: E501
        self._id_prospect = None
        self._name = None
        self._email = None
        self._last_name = None
        self._ddi = None
        self._cellphone = None
        self._birthday = None
        self._gender = None
        self._notes = None
        self._current_step = None
        self._cpf = None
        self._token_gympass = None
        self.discriminator = None
        if id_prospect is not None:
            self.id_prospect = id_prospect
        if name is not None:
            self.name = name
        if email is not None:
            self.email = email
        if last_name is not None:
            self.last_name = last_name
        if ddi is not None:
            self.ddi = ddi
        if cellphone is not None:
            self.cellphone = cellphone
        if birthday is not None:
            self.birthday = birthday
        if gender is not None:
            self.gender = gender
        if notes is not None:
            self.notes = notes
        if current_step is not None:
            self.current_step = current_step
        if cpf is not None:
            self.cpf = cpf
        if token_gympass is not None:
            self.token_gympass = token_gympass

    @property
    def id_prospect(self):
        """Gets the id_prospect of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The id_prospect of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: int
        """
        return self._id_prospect

    @id_prospect.setter
    def id_prospect(self, id_prospect):
        """Sets the id_prospect of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param id_prospect: The id_prospect of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: int
        """

        self._id_prospect = id_prospect

    @property
    def name(self):
        """Gets the name of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The name of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param name: The name of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def email(self):
        """Gets the email of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The email of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param email: The email of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def last_name(self):
        """Gets the last_name of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The last_name of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param last_name: The last_name of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def ddi(self):
        """Gets the ddi of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The ddi of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: str
        """
        return self._ddi

    @ddi.setter
    def ddi(self, ddi):
        """Sets the ddi of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param ddi: The ddi of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: str
        """

        self._ddi = ddi

    @property
    def cellphone(self):
        """Gets the cellphone of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The cellphone of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: str
        """
        return self._cellphone

    @cellphone.setter
    def cellphone(self, cellphone):
        """Sets the cellphone of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param cellphone: The cellphone of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: str
        """

        self._cellphone = cellphone

    @property
    def birthday(self):
        """Gets the birthday of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The birthday of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: datetime
        """
        return self._birthday

    @birthday.setter
    def birthday(self, birthday):
        """Sets the birthday of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param birthday: The birthday of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: datetime
        """

        self._birthday = birthday

    @property
    def gender(self):
        """Gets the gender of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The gender of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param gender: The gender of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: str
        """

        self._gender = gender

    @property
    def notes(self):
        """Gets the notes of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The notes of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param notes: The notes of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: str
        """

        self._notes = notes

    @property
    def current_step(self):
        """Gets the current_step of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The current_step of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: str
        """
        return self._current_step

    @current_step.setter
    def current_step(self, current_step):
        """Sets the current_step of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param current_step: The current_step of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: str
        """

        self._current_step = current_step

    @property
    def cpf(self):
        """Gets the cpf of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The cpf of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: str
        """
        return self._cpf

    @cpf.setter
    def cpf(self, cpf):
        """Sets the cpf of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param cpf: The cpf of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: str
        """

        self._cpf = cpf

    @property
    def token_gympass(self):
        """Gets the token_gympass of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501


        :return: The token_gympass of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :rtype: str
        """
        return self._token_gympass

    @token_gympass.setter
    def token_gympass(self, token_gympass):
        """Sets the token_gympass of this ProspectApiIntegracaoAtualizacaoViewModel.


        :param token_gympass: The token_gympass of this ProspectApiIntegracaoAtualizacaoViewModel.  # noqa: E501
        :type: str
        """

        self._token_gympass = token_gympass

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ProspectApiIntegracaoAtualizacaoViewModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProspectApiIntegracaoAtualizacaoViewModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
