
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Run Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  flake:
    name: Flake8
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Flake8
        # httpx: https://fastapi.tiangolo.com/tutorial/testing/#using-testclient
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  formatting:
    uses: ./.github/workflows/black-formatter.yaml
    needs: flake
    secrets:
      BLACK_FORMATTER_PAT: ${{ secrets.PAT }}

  tests-client:
    name: Run evo_client Tests    
    runs-on: ubuntu-latest
    timeout-minutes: 45
    needs: flake

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          check-latest: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          python -m pip install -e .
          if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install ruff mypy  # Add the tools needed for CI

      - name: Check for ruff issues
        run: |
          ruff check ./src/evo_client/

      - name: Type check with mypy
        run: |
          mypy ./src/evo_client/ --check-untyped-defs

      - name: Test with pytest & Generate coverage report
        # https://github.com/pytest-dev/pytest-cov
        # https://pytest-cov.readthedocs.io/en/latest/readme.html
        run: |
          pytest ./test --durations=10 --cov=./src/evo_client --cov-report=term-missing:skip-covered --cov-report=xml -x
 
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: jquant/evo_client_python

