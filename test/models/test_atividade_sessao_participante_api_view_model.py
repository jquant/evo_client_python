# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password. The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import pytest
from datetime import datetime

from evo_client.models.atividade_sessao_participante_api_view_model import (
    AtividadeSessaoParticipanteApiViewModel,
)
from evo_client.exceptions.api_exceptions import ApiException
from evo_client.models import EStatusAtividadeSessao


@pytest.fixture
def atividade_sessao_participante_api_view_model():
    return AtividadeSessaoParticipanteApiViewModel(
        idMember=1,
        idEmployee=2,
        idProspect=3,
        slotNumber=4,
        name="John Doe",
        photo="photo.jpg",
        justifiedAbsence=True,
        status=EStatusAtividadeSessao._0,
    )


def test_atividade_sessao_participante_api_view_model_creation(
    atividade_sessao_participante_api_view_model,
):
    """Test creating an AtividadeSessaoParticipanteApiViewModel instance"""
    assert isinstance(
        atividade_sessao_participante_api_view_model,
        AtividadeSessaoParticipanteApiViewModel,
    )
    assert atividade_sessao_participante_api_view_model.id_member == 1
    assert atividade_sessao_participante_api_view_model.id_employee == 2
    assert atividade_sessao_participante_api_view_model.id_prospect == 3
    assert atividade_sessao_participante_api_view_model.slot_number == 4
    assert atividade_sessao_participante_api_view_model.name == "John Doe"
    assert atividade_sessao_participante_api_view_model.photo == "photo.jpg"
    assert atividade_sessao_participante_api_view_model.justified_absence is True
    assert (
        atividade_sessao_participante_api_view_model.status == EStatusAtividadeSessao._0
    )


def test_atividade_sessao_participante_api_view_model_to_dict(
    atividade_sessao_participante_api_view_model,
):
    """Test converting AtividadeSessaoParticipanteApiViewModel to dictionary"""
    model_dict = atividade_sessao_participante_api_view_model.to_dict()

    assert isinstance(model_dict, dict)
    assert model_dict["idMember"] == 1
    assert model_dict["idEmployee"] == 2
    assert model_dict["idProspect"] == 3
    assert model_dict["slotNumber"] == 4
    assert model_dict["name"] == "John Doe"
    assert model_dict["photo"] == "photo.jpg"
    assert model_dict["justifiedAbsence"] is True
    assert model_dict["status"] == EStatusAtividadeSessao._0.to_dict()


def test_atividade_sessao_participante_api_view_model_equality(
    atividade_sessao_participante_api_view_model,
):
    """Test equality comparison of AtividadeSessaoParticipanteApiViewModel instances"""
    same_model = AtividadeSessaoParticipanteApiViewModel(
        idMember=1,
        idEmployee=2,
        idProspect=3,
        slotNumber=4,
        name="John Doe",
        photo="photo.jpg",
        justifiedAbsence=True,
        status=EStatusAtividadeSessao._0,
    )

    different_model = AtividadeSessaoParticipanteApiViewModel(
        idMember=2,
        idEmployee=3,
        idProspect=4,
        slotNumber=5,
        name="Jane Smith",
        photo="photo2.jpg",
        justifiedAbsence=False,
        status=EStatusAtividadeSessao._1,
    )

    assert atividade_sessao_participante_api_view_model == same_model
    assert atividade_sessao_participante_api_view_model != different_model
