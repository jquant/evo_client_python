# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

from datetime import datetime

import pytest

from evo_client.models.atividade_agenda_api_view_model import (
    AtividadeAgendaApiViewModel,
)
from evo_client.models.e_status_atividade import EStatusAtividade


@pytest.fixture
def atividade_agenda_api_view_model():
    return AtividadeAgendaApiViewModel(
        idConfiguration=1,
        idActivity=2,
        idGroupActivity=3,
        name="Yoga Class",
        description="Beginner friendly yoga class",
        imageUrl="https://example.com/yoga.jpg",
        area="Studio 1",
        idArea=4,
        capacity=20,
        ocupation=15,
        allowChoosingSpot=True,
        startTime="09:00",
        endTime="10:00",
        bookingStartTime="08:00",
        bookingEndTime="08:45",
        instructor="John Doe",
        instructorPhoto="https://example.com/instructor.jpg",
        activityDate=datetime(2024, 3, 15, 9, 0),
        audience="All Levels",
        idAudience=1,
        code="YOGA101",
        confirmed=True,
        startHourTick=32400,  # 9:00 in seconds
        endHourTick=36000,  # 10:00 in seconds
        spots=[],
        periodization=[],
        status=EStatusAtividade._0,
        statusName="Active",
    )


def test_atividade_agenda_api_view_model_creation(atividade_agenda_api_view_model):
    """Test creating an AtividadeAgendaApiViewModel instance"""
    assert isinstance(atividade_agenda_api_view_model, AtividadeAgendaApiViewModel)
    assert atividade_agenda_api_view_model.id_configuration == 1
    assert atividade_agenda_api_view_model.id_activity == 2
    assert atividade_agenda_api_view_model.name == "Yoga Class"
    assert atividade_agenda_api_view_model.description == "Beginner friendly yoga class"
    assert atividade_agenda_api_view_model.capacity == 20
    assert atividade_agenda_api_view_model.ocupation == 15
    assert atividade_agenda_api_view_model.instructor == "John Doe"
    assert atividade_agenda_api_view_model.confirmed is True
    assert atividade_agenda_api_view_model.status == EStatusAtividade._0


def test_atividade_agenda_api_view_model_to_dict(atividade_agenda_api_view_model):
    """Test converting AtividadeAgendaApiViewModel to dictionary"""
    model_dict = atividade_agenda_api_view_model.to_dict()

    assert isinstance(model_dict, dict)
    assert model_dict["idConfiguration"] == 1
    assert model_dict["idActivity"] == 2
    assert model_dict["name"] == "Yoga Class"
    assert model_dict["capacity"] == 20
    assert model_dict["ocupation"] == 15
    assert model_dict["confirmed"] is True


def test_atividade_agenda_api_view_model_equality(atividade_agenda_api_view_model):
    """Test equality comparison of AtividadeAgendaApiViewModel instances"""
    same_model = AtividadeAgendaApiViewModel(
        idConfiguration=1,
        idActivity=2,
        idGroupActivity=3,
        name="Yoga Class",
        description="Beginner friendly yoga class",
        imageUrl="https://example.com/yoga.jpg",
        area="Studio 1",
        idArea=4,
        capacity=20,
        ocupation=15,
        allowChoosingSpot=True,
        startTime="09:00",
        endTime="10:00",
        bookingStartTime="08:00",
        bookingEndTime="08:45",
        instructor="John Doe",
        instructorPhoto="https://example.com/instructor.jpg",
        activityDate=datetime(2024, 3, 15, 9, 0),
        audience="All Levels",
        idAudience=1,
        code="YOGA101",
        confirmed=True,
        startHourTick=32400,  # 9:00 in seconds
        endHourTick=36000,  # 10:00 in seconds
        spots=[],
        periodization=[],
        status=EStatusAtividade._0,
        statusName="Active",
    )

    different_model = AtividadeAgendaApiViewModel(
        idConfiguration=2,
        idActivity=3,
        name="Different Class",
        description="Different description",
        capacity=30,
        ocupation=25,
        confirmed=False,
        status=EStatusAtividade._0,
    )

    assert atividade_agenda_api_view_model == same_model
    assert atividade_agenda_api_view_model != different_model
    assert atividade_agenda_api_view_model != 1
