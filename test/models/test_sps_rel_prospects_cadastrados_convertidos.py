# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

from datetime import datetime

import pytest

from evo_client.models.sps_rel_prospects_cadastrados_convertidos import (
    SpsRelProspectsCadastradosConvertidos,
)


@pytest.fixture
def sps_rel_prospects_cadastrados_convertidos():
    return SpsRelProspectsCadastradosConvertidos(
        idFilial=1,
        nomeFilial="Main Branch",
        status="Active",
        idProspect=123,
        nome="John Doe",
        dtCadastro=datetime(2023, 10, 1, 10, 0),
        primeiraVisita="2023-10-02",
        convertidoPor="Jane Smith",
        dtConversao=datetime(2023, 10, 5, 15, 0),
        idCliente=456,
        descricao="Converted prospect",
        primeiroContrato="2023-10-06",
        apelido="JD",
        marketing="Email Campaign",
    )


def test_sps_rel_prospects_cadastrados_convertidos_creation(
    sps_rel_prospects_cadastrados_convertidos,
):
    """Test creating a SpsRelProspectsCadastradosConvertidos instance"""
    assert isinstance(
        sps_rel_prospects_cadastrados_convertidos, SpsRelProspectsCadastradosConvertidos
    )
    assert sps_rel_prospects_cadastrados_convertidos.id_filial == 1
    assert sps_rel_prospects_cadastrados_convertidos.nome_filial == "Main Branch"
    assert sps_rel_prospects_cadastrados_convertidos.status == "Active"
    assert sps_rel_prospects_cadastrados_convertidos.id_prospect == 123
    assert sps_rel_prospects_cadastrados_convertidos.nome == "John Doe"
    assert sps_rel_prospects_cadastrados_convertidos.dt_cadastro == datetime(
        2023, 10, 1, 10, 0
    )
    assert sps_rel_prospects_cadastrados_convertidos.primeira_visita == "2023-10-02"
    assert sps_rel_prospects_cadastrados_convertidos.convertido_por == "Jane Smith"
    assert sps_rel_prospects_cadastrados_convertidos.dt_conversao == datetime(
        2023, 10, 5, 15, 0
    )
    assert sps_rel_prospects_cadastrados_convertidos.id_cliente == 456
    assert sps_rel_prospects_cadastrados_convertidos.descricao == "Converted prospect"
    assert sps_rel_prospects_cadastrados_convertidos.primeiro_contrato == "2023-10-06"
    assert sps_rel_prospects_cadastrados_convertidos.apelido == "JD"
    assert sps_rel_prospects_cadastrados_convertidos.marketing == "Email Campaign"


def test_sps_rel_prospects_cadastrados_convertidos_to_dict(
    sps_rel_prospects_cadastrados_convertidos,
):
    """Test converting SpsRelProspectsCadastradosConvertidos to dictionary"""
    model_dict = sps_rel_prospects_cadastrados_convertidos.to_dict()

    assert isinstance(model_dict, dict)
    assert model_dict["idFilial"] == 1
    assert model_dict["nomeFilial"] == "Main Branch"
    assert model_dict["status"] == "Active"
    assert model_dict["idProspect"] == 123
    assert model_dict["nome"] == "John Doe"
    assert model_dict["dtCadastro"] == "2023-10-01T10:00:00"
    assert model_dict["primeiraVisita"] == "2023-10-02"
    assert model_dict["convertidoPor"] == "Jane Smith"
    assert model_dict["dtConversao"] == "2023-10-05T15:00:00"
    assert model_dict["idCliente"] == 456
    assert model_dict["descricao"] == "Converted prospect"
    assert model_dict["primeiroContrato"] == "2023-10-06"
    assert model_dict["apelido"] == "JD"
    assert model_dict["marketing"] == "Email Campaign"


def test_sps_rel_prospects_cadastrados_convertidos_equality(
    sps_rel_prospects_cadastrados_convertidos,
):
    """Test equality comparison of SpsRelProspectsCadastradosConvertidos instances"""
    same_model = SpsRelProspectsCadastradosConvertidos(
        idFilial=1,
        nomeFilial="Main Branch",
        status="Active",
        idProspect=123,
        nome="John Doe",
        dtCadastro=datetime(2023, 10, 1, 10, 0),
        primeiraVisita="2023-10-02",
        convertidoPor="Jane Smith",
        dtConversao=datetime(2023, 10, 5, 15, 0),
        idCliente=456,
        descricao="Converted prospect",
        primeiroContrato="2023-10-06",
        apelido="JD",
        marketing="Email Campaign",
    )

    different_model = SpsRelProspectsCadastradosConvertidos(
        idFilial=2,
        nomeFilial="Secondary Branch",
        status="Inactive",
        idProspect=789,
        nome="Alice Doe",
        dtCadastro=datetime(2023, 11, 1, 10, 0),
        primeiraVisita="2023-11-02",
        convertidoPor="Bob Smith",
        dtConversao=datetime(2023, 11, 5, 15, 0),
        idCliente=987,
        descricao="New prospect",
        primeiroContrato="2023-11-06",
        apelido="AD",
        marketing="Social Media",
    )

    assert sps_rel_prospects_cadastrados_convertidos == same_model
    assert sps_rel_prospects_cadastrados_convertidos != different_model
    assert sps_rel_prospects_cadastrados_convertidos != 1
