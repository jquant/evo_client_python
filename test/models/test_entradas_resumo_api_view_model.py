# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password.The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import
from datetime import datetime
import pytest

from evo_client.models.entradas_resumo_api_view_model import EntradasResumoApiViewModel


@pytest.fixture
def entradas_resumo_api_view_model():
    return EntradasResumoApiViewModel(
        date=datetime(2023, 11, 1),
        dateTurn=datetime(2023, 11, 1, 8, 0),
        timeZone="UTC",
        idMember=1,
        nameMember="John Doe",
        idProspect=2,
        nameProspect="Jane Smith",
        idEmployee=3,
        nameEmployee="Alice Johnson",
        entryType="Check-in",
        device="Device A",
        releasesByID=4,
        idBranch=5,
        blockReason="None",
        entryAction="Allowed",
        idMigration="Migration123",
    )


def test_entradas_resumo_api_view_model_creation(entradas_resumo_api_view_model):
    """Test creating an EntradasResumoApiViewModel instance"""
    model = entradas_resumo_api_view_model
    assert isinstance(model, EntradasResumoApiViewModel)
    assert model.date == datetime(2023, 11, 1)
    assert model.date_turn == datetime(2023, 11, 1, 8, 0)
    assert model.time_zone == "UTC"
    assert model.id_member == 1
    assert model.name_member == "John Doe"
    assert model.id_prospect == 2
    assert model.name_prospect == "Jane Smith"
    assert model.id_employee == 3
    assert model.name_employee == "Alice Johnson"
    assert model.entry_type == "Check-in"
    assert model.device == "Device A"
    assert model.releases_by_id == 4
    assert model.id_branch == 5
    assert model.block_reason == "None"
    assert model.entry_action == "Allowed"
    assert model.id_migration == "Migration123"


def test_entradas_resumo_api_view_model_to_dict(entradas_resumo_api_view_model):
    """Test converting EntradasResumoApiViewModel to dictionary"""
    model_dict = entradas_resumo_api_view_model.to_dict()

    assert isinstance(model_dict, dict)
    assert model_dict["date"] == "2023-11-01T00:00:00"
    assert model_dict["dateTurn"] == "2023-11-01T08:00:00"
    assert model_dict["timeZone"] == "UTC"
    assert model_dict["idMember"] == 1
    assert model_dict["nameMember"] == "John Doe"
    assert model_dict["idProspect"] == 2
    assert model_dict["nameProspect"] == "Jane Smith"
    assert model_dict["idEmployee"] == 3
    assert model_dict["nameEmployee"] == "Alice Johnson"
    assert model_dict["entryType"] == "Check-in"
    assert model_dict["device"] == "Device A"
    assert model_dict["releasesByID"] == 4
    assert model_dict["idBranch"] == 5
    assert model_dict["blockReason"] == "None"
    assert model_dict["entryAction"] == "Allowed"
    assert model_dict["idMigration"] == "Migration123"


def test_entradas_resumo_api_view_model_equality(entradas_resumo_api_view_model):
    """Test equality comparison of EntradasResumoApiViewModel instances"""
    same_model = EntradasResumoApiViewModel(
        date=datetime(2023, 11, 1),
        dateTurn=datetime(2023, 11, 1, 8, 0),
        timeZone="UTC",
        idMember=1,
        nameMember="John Doe",
        idProspect=2,
        nameProspect="Jane Smith",
        idEmployee=3,
        nameEmployee="Alice Johnson",
        entryType="Check-in",
        device="Device A",
        releasesByID=4,
        idBranch=5,
        blockReason="None",
        entryAction="Allowed",
        idMigration="Migration123",
    )

    different_model = EntradasResumoApiViewModel(
        date=datetime(2023, 12, 1),
        dateTurn=datetime(2023, 12, 1, 9, 0),
        timeZone="PST",
        idMember=10,
        nameMember="Different Member",
        idProspect=20,
        nameProspect="Different Prospect",
        idEmployee=30,
        nameEmployee="Different Employee",
        entryType="Check-out",
        device="Device B",
        releasesByID=40,
        idBranch=50,
        blockReason="Blocked",
        entryAction="Denied",
        idMigration="Migration456",
    )

    assert entradas_resumo_api_view_model == same_model
    assert entradas_resumo_api_view_model != different_model
