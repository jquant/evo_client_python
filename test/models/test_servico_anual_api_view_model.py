# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password. The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import pytest
from evo_client.models.servico_anual_api_view_model import ServicoAnualApiViewModel


@pytest.fixture
def servico_anual_api_view_model():
    return ServicoAnualApiViewModel(
        idService=1,
        name="Annual Gym Membership",
        value=1200.0,
        type=1,
        billingMonth=1,
        billingDay=15,
        billingAfterMonths=12,
        installments=12,
    )


def test_servico_anual_api_view_model_creation(servico_anual_api_view_model):
    """Test creating a ServicoAnualApiViewModel instance"""
    assert isinstance(servico_anual_api_view_model, ServicoAnualApiViewModel)
    assert servico_anual_api_view_model.id_service == 1
    assert servico_anual_api_view_model.name == "Annual Gym Membership"
    assert servico_anual_api_view_model.value == 1200.0
    assert servico_anual_api_view_model.type == 1
    assert servico_anual_api_view_model.billing_month == 1
    assert servico_anual_api_view_model.billing_day == 15
    assert servico_anual_api_view_model.billing_after_months == 12
    assert servico_anual_api_view_model.installments == 12


def test_servico_anual_api_view_model_to_dict(servico_anual_api_view_model):
    """Test converting ServicoAnualApiViewModel to dictionary"""
    model_dict = servico_anual_api_view_model.to_dict()

    assert isinstance(model_dict, dict)
    assert model_dict["idService"] == 1
    assert model_dict["name"] == "Annual Gym Membership"
    assert model_dict["value"] == 1200.0
    assert model_dict["type"] == 1
    assert model_dict["billingMonth"] == 1
    assert model_dict["billingDay"] == 15
    assert model_dict["billingAfterMonths"] == 12
    assert model_dict["installments"] == 12


def test_servico_anual_api_view_model_equality(servico_anual_api_view_model):
    """Test equality comparison of ServicoAnualApiViewModel instances"""
    same_model = ServicoAnualApiViewModel(
        idService=1,
        name="Annual Gym Membership",
        value=1200.0,
        type=1,
        billingMonth=1,
        billingDay=15,
        billingAfterMonths=12,
        installments=12,
    )

    different_model = ServicoAnualApiViewModel(
        idService=2,
        name="Monthly Gym Membership",
        value=100.0,
        type=2,
        billingMonth=2,
        billingDay=1,
        billingAfterMonths=1,
        installments=1,
    )

    assert servico_anual_api_view_model == same_model
    assert servico_anual_api_view_model != different_model
    assert servico_anual_api_view_model != 1
