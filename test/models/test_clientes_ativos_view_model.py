# coding: utf-8

"""
    EVO API

    Use the DNS of your gym as the User and the Secret Key as the password. The authentication method used in the integration is Basic Authentication  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import
from datetime import datetime

import pytest

from evo_client.models.clientes_ativos_view_model import (
    ClientesAtivosViewModel,
)


@pytest.fixture
def clientes_ativos_view_model():
    return ClientesAtivosViewModel(
        idFilial=1,
        filial="Main Branch",
        idCliente=123,
        nomeCompleto="John Doe",
        telefone="1234567890",
        email="john.doe@example.com",
        idClienteContratoAtivo=456,
        contratoAtivo="Active",
        dtInicioContratoAtivo=datetime(2023, 1, 1),
        dtFimContratoAtivo=datetime(2023, 12, 31),
        idClienteContratoFuturo=789,
        contratoFuturo="Future",
        dtInicioContratoFuturo=datetime(2024, 1, 1),
        dtFimContratoFuturo=datetime(2024, 12, 31),
    )


def test_clientes_ativos_view_model_creation(clientes_ativos_view_model):
    """Test creating a ClientesAtivosViewModel instance"""
    assert isinstance(clientes_ativos_view_model, ClientesAtivosViewModel)
    assert clientes_ativos_view_model.id_filial == 1
    assert clientes_ativos_view_model.filial == "Main Branch"
    assert clientes_ativos_view_model.id_cliente == 123
    assert clientes_ativos_view_model.nome_completo == "John Doe"
    assert clientes_ativos_view_model.telefone == "1234567890"
    assert clientes_ativos_view_model.email == "john.doe@example.com"
    assert clientes_ativos_view_model.contrato_ativo == "Active"


def test_clientes_ativos_view_model_to_dict(clientes_ativos_view_model):
    """Test converting ClientesAtivosViewModel to dictionary"""
    model_dict = clientes_ativos_view_model.to_dict()

    assert isinstance(model_dict, dict)
    assert model_dict["idFilial"] == 1
    assert model_dict["filial"] == "Main Branch"
    assert model_dict["idCliente"] == 123
    assert model_dict["nomeCompleto"] == "John Doe"
    assert model_dict["telefone"] == "1234567890"
    assert model_dict["email"] == "john.doe@example.com"
    assert model_dict["contratoAtivo"] == "Active"


def test_clientes_ativos_view_model_equality(clientes_ativos_view_model):
    """Test equality comparison of ClientesAtivosViewModel instances"""
    same_model = ClientesAtivosViewModel(
        idFilial=1,
        filial="Main Branch",
        idCliente=123,
        nomeCompleto="John Doe",
        telefone="1234567890",
        email="john.doe@example.com",
        contratoAtivo="Active",
    )

    different_model = ClientesAtivosViewModel(
        idFilial=2,
        filial="Secondary Branch",
        idCliente=456,
        nomeCompleto="Jane Smith",
        telefone="0987654321",
        email="jane.smith@example.com",
        contratoAtivo="Inactive",
    )

    assert clientes_ativos_view_model == same_model
    assert clientes_ativos_view_model != different_model
